version: '3.8'

services:
  # MongoDB数据库
  mongodb:
    image: mongo:6.0
    container_name: agent_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: qwbt123
      MONGO_INITDB_DATABASE: agent_system
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - agent_network

  # Ollama服务（可选）
  ollama:
    image: ollama/ollama:latest
    container_name: agent_ollama
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - agent_network
    profiles:
      - ollama

  # Redis缓存（可选）
  redis:
    image: redis:7-alpine
    container_name: agent_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - agent_network
    profiles:
      - cache

  # 后端API服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: agent_backend
    restart: unless-stopped
    environment:
      - MONGO_URI=mongodb://root:qwbt123@mongodb:27017/
      - DB_NAME=agent_system
      - OLLAMA_BASE_URL=http://ollama:11434
      - SECRET_KEY=your-secret-key-here-change-in-production
      - DEBUG=True
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
    depends_on:
      - mongodb
    networks:
      - agent_network

  # 前端服务
  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile
    container_name: agent_frontend
    restart: unless-stopped
    environment:
      - VITE_API_BASE_URL=http://localhost:5000/api
      - VITE_WS_BASE_URL=ws://localhost:5000
    ports:
      - "5173:5173"
    volumes:
      - ./front:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - agent_network

  # Nginx反向代理（可选）
  nginx:
    image: nginx:alpine
    container_name: agent_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - agent_network
    profiles:
      - proxy

volumes:
  mongodb_data:
    driver: local
  ollama_data:
    driver: local
  redis_data:
    driver: local

networks:
  agent_network:
    driver: bridge 